rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function getUserCompany() {
      return getUserData().companyId;
    }
    
    function getUserRole() {
      return getUserData().role;
    }
    
    function isInSameCompany(targetCompanyId) {
      return isAuthenticated() && getUserCompany() == targetCompanyId;
    }
    
    function isAdmin() {
      return getUserRole() in ['admin', 'super-admin'];
    }
    
    function isSuperAdmin() {
      return getUserRole() == 'super-admin';
    }
    
    function isCoach() {
      return getUserRole() == 'coach';
    }
    
    function isClient() {
      return getUserRole() == 'client';
    }
    
    // Users collection - Company-scoped access
    match /users/{userId} {
      // Users can read their own profile and other users in their company
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || 
        (exists(/databases/$(database)/documents/users/$(userId)) && 
         isInSameCompany(get(/databases/$(database)/documents/users/$(userId)).data.companyId))
      );
      
      // Users can only update their own profile
      allow write: if isAuthenticated() && request.auth.uid == userId;
      
      // Admins can create users in their company
      allow create: if isAuthenticated() && isAdmin() && 
        isInSameCompany(resource.data.companyId);
    }
    
    // Companies collection - Restricted access
    match /companies/{companyId} {
      // Only company members can read company data
      allow read: if isAuthenticated() && isInSameCompany(companyId);
      
      // Only super-admins can modify company data
      allow write: if isAuthenticated() && isSuperAdmin() && 
        isInSameCompany(companyId);
    }
    
    // Sessions collection - Role and company-based access
    match /sessions/{sessionId} {
      // Read access based on role and company
      allow read: if isAuthenticated() && 
        isInSameCompany(resource.data.companyId) && (
          // Admins can see all company sessions
          isAdmin() ||
          // Coaches can see their own sessions
          (isCoach() && resource.data.coachId == request.auth.uid) ||
          // Clients can see their own sessions
          (isClient() && resource.data.clientId == request.auth.uid)
        );
      
      // Write access - only coaches and admins
      allow create: if isAuthenticated() && 
        isInSameCompany(resource.data.companyId) && 
        (isCoach() || isAdmin());
        
      allow update: if isAuthenticated() && 
        isInSameCompany(resource.data.companyId) && (
          // Coaches can update their own sessions
          (isCoach() && resource.data.coachId == request.auth.uid) ||
          // Admins can update any company session
          isAdmin()
        );
        
      allow delete: if isAuthenticated() && 
        isInSameCompany(resource.data.companyId) && isAdmin();
    }
  }
}