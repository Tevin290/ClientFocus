
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // =================================
    // Helper Functions
    // =================================
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function getRole(userId) {
      return getUserData(userId).role;
    }

    function isAdmin() {
      return isAuth() && getRole(request.auth.uid) == 'admin';
    }

    function isCoach() {
      return isAuth() && getRole(request.auth.uid) == 'coach';
    }

    function isClient() {
      return isAuth() && getRole(request.auth.uid) == 'client';
    }

    // =================================
    // Global Admin Access
    // =================================
    // Admins can read, write, and delete anything. This rule is checked first.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // =================================
    // User Profiles (/users)
    // =================================
    match /users/{userId} {
      // READ permissions:
      // - A user can read their own profile.
      // - Anyone can read a coach's profile (for signup).
      // - A coach can read the profile of a client assigned to them.
      allow get: if isUser(userId) 
                  || resource.data.role == 'coach' 
                  || (isCoach() && resource.data.coachId == request.auth.uid);
      
      // LIST (Query) permissions:
      // - Anyone can LIST users if they are querying for coaches (for signup).
      // - A coach can LIST users if they are querying for their clients.
      allow list: if request.query.role == 'coach'
                   || (isCoach() && request.query.coachId == request.auth.uid);

      // CREATE permissions: A user can create their own profile.
      allow create: if isUser(userId);

      // UPDATE permissions:
      // - A client can update their own coachId.
      allow update: if isUser(userId) 
                     && request.resource.data.keys().hasAll(['coachId']);
    }

    // =================================
    // Sessions (/sessions)
    // =================================
    match /sessions/{sessionId} {
      // READ permissions:
      // - A coach can read sessions they created.
      // - A client can read their own sessions.
      allow read: if (isCoach() && resource.data.coachId == request.auth.uid) 
                   || (isClient() && resource.data.clientId == request.auth.uid);
        
      // CREATE permissions: A coach can create a session for one of their assigned clients.
      allow create: if isCoach() 
                     && request.resource.data.coachId == request.auth.uid
                     && getUserData(request.resource.data.clientId).coachId == request.auth.uid;
                     
      // UPDATE permissions: An admin can update any session (covered by global rule).
      // A coach could update a session, but that is handled by the admin review flow.
      allow update: if isAuth() && getRole(request.auth.uid) == 'admin';
    }
  }
}
