
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      // Diagnostic create rule:
      // Allows creating a user document if the user is authenticated,
      // the document ID matches their UID, and it only contains
      // 'diagnosticMarker' (boolean true) and 'createdAt' (timestamp) fields.
      allow create: if request.auth != null &&
                       request.auth.uid == userId &&
                       request.resource.data.keys().hasAll(['diagnosticMarker', 'createdAt']) &&
                       request.resource.data.size() == 2 &&
                       request.resource.data.diagnosticMarker == true &&
                       request.resource.data.createdAt is timestamp;

      // Allow read only if the user is authenticated and is requesting their own document.
      allow read: if request.auth != null &&
                     request.auth.uid == userId;

      // Allow update if user is authenticated and is updating their own document.
      // (Further restrictions on updatable fields would typically be added here).
      allow update: if request.auth != null &&
                       request.auth.uid == userId;

      // Disallow delete for now.
      allow delete: if false;
    }

    // Sessions collection
    match /sessions/{sessionId} {
      // Allow create if the user is authenticated (e.g., a coach)
      // and provides necessary fields.
      allow create: if request.auth != null &&
                       request.resource.data.coachId == request.auth.uid &&
                       'clientName' in request.resource.data &&
                       'sessionDate' in request.resource.data &&
                       request.resource.data.sessionDate is timestamp &&
                       'sessionType' in request.resource.data &&
                       'status' in request.resource.data;

      // Allow read for admin, or for the coach who created it, or for the client it belongs to.
      allow read: if request.auth != null &&
                     (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
                      resource.data.coachId == request.auth.uid ||
                      resource.data.clientId == request.auth.uid);

      // Allow update for admin or the coach who created it.
      allow update: if request.auth != null &&
                       (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
                        resource.data.coachId == request.auth.uid);

      // Disallow delete for now.
      allow delete: if false;
    }
  }
}
