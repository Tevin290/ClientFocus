
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow authenticated users to create their own profile document during sign-up
      // Allow authenticated users to update their own profile document
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Sessions Collection
    match /sessions/{sessionId} {
      // Admins can read and write all sessions
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Coaches can create sessions
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coach';

      // Coaches can read and update sessions they created (coachId matches their uid)
      allow read, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coach' && resource.data.coachId == request.auth.uid;

      // Clients can read sessions where their clientId matches their uid
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'client' && resource.data.clientId == request.auth.uid;

      // Deny delete for most roles unless explicitly admin or through a function
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // appSettings Collection (Example for Stripe public keys, etc.)
    // Allow authenticated users to read app settings. Write should be restricted (e.g., admin only or server-side).
    match /appSettings/{settingId} {
      allow read: if request.auth != null;
      // allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
