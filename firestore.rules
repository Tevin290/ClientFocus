
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function isUserRole(role) {
      // Check for auth existence first to prevent errors on unauthenticated requests
      return isUserAuthenticated() && getUserData(request.auth.uid).role == role;
    }

    // Admins have god mode access to everything
    match /{document=**} {
      allow read, write: if isUserRole('admin');
    }

    // USERS collection rules
    match /users/{userId} {
      // ANYONE can create a user profile (for signup)
      allow create: if true;
      
      // Allow reading user profiles under specific conditions.
      // This single rule covers both direct gets and queries (lists).
      allow read: if 
        // 1. You can read your own profile.
        (isUserAuthenticated() && request.auth.uid == userId) ||
        // 2. Anyone can read a coach's profile (for signup lists).
        (resource.data.role == 'coach') ||
        // 3. A coach can read the profiles of their assigned clients.
        (isUserRole('coach') && resource.data.coachId == request.auth.uid);
      
      // Users can update their own profile (e.g., changing their assigned coach)
      allow update: if isUserAuthenticated() && request.auth.uid == userId;
    }

    // SESSIONS collection rules
    match /sessions/{sessionId} {
      // Coaches can create sessions for their clients.
      allow create: if isUserRole('coach') && request.resource.data.coachId == request.auth.uid;

      // Allow reading sessions under specific conditions:
      // 1. A client can read their own sessions.
      // 2. A coach can read sessions they created.
      allow read: if 
        (isUserRole('client') && resource.data.clientId == request.auth.uid) ||
        (isUserRole('coach') && resource.data.coachId == request.auth.uid);

      // Coaches can update sessions they created.
      // Admins can update any session (handled by the global admin rule).
      allow update: if isUserRole('coach') && resource.data.coachId == request.auth.uid;
    }
  }
}
