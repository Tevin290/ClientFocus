
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions to keep rules DRY
    function isAuth() { 
      return request.auth != null; 
    }
    
    function getRole() { 
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role; 
    }

    function isRole(role) { 
      return isAuth() && getRole() == role; 
    }

    function isAdmin() { 
      return isRole('admin') || isRole('super-admin'); 
    }

    function isCoach() { 
      return isRole('coach'); 
    }

    function isClient() { 
      return isRole('client'); 
    }

    // ------ USER PROFILES ------
    match /users/{userId} {
      // ANY authenticated user can CREATE their own user document (on signup).
      // Public can READ coach profiles for the signup list.
      allow create: if isAuth() && request.auth.uid == userId;
      allow read: if resource.data.role == 'coach' || (isAuth() && (
                    request.auth.uid == userId ||
                    isAdmin() ||
                    (isCoach() && resource.data.coachId == request.auth.uid)
                  ));

      // A client can update their own coachId.
      // Users can update their own displayName, photoURL.
      // Admins can update anything.
      allow update: if isAuth() && (
        (request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['coachId', 'displayName', 'photoURL', 'updatedAt'])) ||
        isAdmin()
      );
      
      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    // ------ SESSIONS ------
    match /sessions/{sessionId} {
      // Who can CREATE a session?
      // Only a coach can create a session, and they must be the coachId on the session doc.
      allow create: if isCoach() && request.resource.data.coachId == request.auth.uid;

      // Who can READ sessions?
      // Admin: can read all sessions.
      // Coach: can read sessions they created OR sessions for clients assigned to them.
      // Client: can read their own sessions.
      allow read: if isAuth() && (
        isAdmin() ||
        (isClient() && resource.data.clientId == request.auth.uid) ||
        (isCoach() && resource.data.coachId == request.auth.uid) ||
        (isCoach() && get(/databases/$(database)/documents/users/$(resource.data.clientId)).data.coachId == request.auth.uid)
      );
                     
      // Who can UPDATE sessions?
      // Admin: can update any session.
      // Coach: can update sessions they created, but only certain fields.
      allow update: if isAdmin() ||
                       (isCoach() && resource.data.coachId == request.auth.uid && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['sessionDate', 'sessionType', 'videoLink', 'sessionNotes', 'summary', 'updatedAt']));

      // Who can DELETE sessions?
      allow delete: if isAdmin();
    }
  }
}
