
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    /* ──────────────── USERS COLLECTION (EXTREME DIAGNOSTIC) ──────────────── */
    match /users/{userId} {

      // ── CREATE (EXTREME DIAGNOSTIC) ──
      //  • Authenticated user only
      //  • Doc ID must equal auth.uid
      //  • Document must contain 'diagnosticMarker' (boolean) and 'createdAt' (timestamp)
      allow create: if request.auth != null
                    && userId == request.auth.uid
                    && request.resource.data.keys().hasAll(['diagnosticMarker', 'createdAt'])
                    && request.resource.data.diagnosticMarker == true
                    && request.resource.data.createdAt is timestamp;

      // ── READ ──
      //  • User may read their own document if it exists and they are authenticated.
      //  • This rule won't prevent "PERMISSION_DENIED" if the document doesn't exist,
      //    which is expected if the create operation fails.
      allow read: if request.auth != null
                  && request.auth.uid == userId;

      // ── UPDATE (Restrictive for safety during diagnostics) ──
      allow update: if false; // Disallow updates during this diagnostic phase

      // ── DELETE ──
      allow delete: if false;
    }

    /* ──────────────── SESSIONS COLLECTION ──────────────── */
    match /sessions/{sessionId} {
      allow read, write: if request.auth != null;
    }

    /* ──────────────── APP SETTINGS DOCS ──────────────── */
    match /appSettings/{settingsId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
                   && get(/databases/$(database)/documents/users/$(request.auth.uid))
                        .data.role == 'admin'; // This will fail if admin profile not created
    }
  }
}

