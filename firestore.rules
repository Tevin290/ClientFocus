
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ======== HELPER FUNCTIONS ========
    function isSignedIn() {
      return request.auth != null;
    }

    // Checks if the requesting user is the owner of a given document/profile
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Gets the role of the currently authenticated user
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Checks if the current user is an Admin or Super-Admin
    function isAdmin() {
      return isSignedIn() && getRole() in ['admin', 'super-admin'];
    }

    // Checks if the current user is a Coach
    function isCoach() {
      return isSignedIn() && getRole() == 'coach';
    }

    // ======== USERS COLLECTION ========
    match /users/{userId} {
      
      // CREATE: Anyone authenticated can create their own user profile document.
      // This is crucial for the signup flow.
      allow create: if isOwner(userId);

      // READ: Users can read their own profile. Admins can read any profile.
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());

      // UPDATE: A user can only update their own profile. Admins can update any profile.
      allow update: if isSignedIn() && (isOwner(userId) || isAdmin());
      
      // DELETE: Deleting users is disallowed from the client.
      allow delete: if false;
    }
    
    // ======== SESSIONS COLLECTION ========
    match /sessions/{sessionId} {
      
      // CREATE: Only coaches can create new session logs.
      allow create: if isCoach();
      
      // READ: Admins, the assigned coach, or the assigned client can read a session.
      allow read: if isSignedIn() && (isAdmin() || resource.data.coachId == request.auth.uid || resource.data.clientId == request.auth.uid);
      
      // UPDATE: Only admins or the assigned coach can update a session.
      allow update: if isSignedIn() && (isAdmin() || resource.data.coachId == request.auth.uid);
      
      // DELETE: Deleting sessions is disallowed from the client.
      allow delete: if false;
    }

    // ======== COMPANIES COLLECTION ========
    match /companies/{companyId} {
      // READ: Any authenticated user can read company information.
      allow read: if isSignedIn();
      
      // CREATE/UPDATE/DELETE: Only admins can manage company documents.
      allow write: if isAdmin();
    }
  }
}
