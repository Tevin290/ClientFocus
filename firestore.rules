rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user making the request has a specific role
    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    match /users/{userId} {
      // A user can create their own document IF:
      // 1. They are authenticated and the UID matches the document ID.
      // 2. The role being assigned is one of the valid roles.
      // 3. The role is appropriate for the email address provided.
      allow create: if request.auth.uid == userId
                    && request.resource.data.role in ['admin', 'coach', 'client']
                    && (
                      // Business logic for role assignment, enforced on the server.
                      (request.resource.data.role == 'client' && !request.resource.data.email.matches('.*@hmperform\\.com$')) ||
                      (request.resource.data.role == 'coach' && request.resource.data.email.matches('.*@hmperform\\.com$')) ||
                      (request.resource.data.role == 'admin' && (process.env.NEXT_PUBLIC_ADMIN_EMAILS.split(',').indexOf(request.resource.data.email) > -1 || request.resource.data.email == 'hello@hmperform.com'))
                    );

      // A user can read their own document, or an admin can read any user document.
      allow read: if request.auth.uid == userId || isRole('admin');

      // A user can update their own document.
      allow update: if request.auth.uid == userId;

      // For safety, disallow deleting user profiles from the client.
      allow delete: if false;
    }

    match /sessions/{sessionId} {
      // A user can read a session if they are the client, the coach, or an admin.
      allow read: if request.auth.uid == resource.data.clientId
                      || request.auth.uid == resource.data.coachId
                      || isRole('admin');

      // A session can be created by a coach.
      allow create: if isRole('coach');

      // A session can be updated by the coach who created it or an admin.
      allow update: if request.auth.uid == resource.data.coachId || isRole('admin');

      // For safety, disallow deleting sessions from the client.
      allow delete: if false;
    }
  }
}
