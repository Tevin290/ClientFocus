
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for user profiles
    match /users/{userId} {
      // Allow a user to create their own profile document if:
      // 1. They are authenticated (request.auth.uid is not null).
      // 2. The UID in the document they are attempting to create (request.resource.data.uid)
      //    matches their own authenticated UID (request.auth.uid).
      allow create: if request.auth.uid != null &&
                       request.auth.uid == request.resource.data.uid;

      // Allow a user to read their own profile document if:
      // 1. They are authenticated (request.auth.uid is not null).
      // 2. The UID in the path of the document they are trying to read ({userId})
      //    matches their own authenticated UID (request.auth.uid).
      allow read: if request.auth.uid != null &&
                     request.auth.uid == userId;

      // Allow a user to update their own profile document if:
      // 1. They are authenticated.
      // 2. The UID in the path matches their authenticated UID.
      // 3. As an example, prevent them from changing their UID or role via a client-side update.
      allow update: if request.auth.uid != null &&
                       request.auth.uid == userId &&
                       request.resource.data.uid == resource.data.uid &&
                       request.resource.data.role == resource.data.role;

      // Generally, disallow client-side deletion of user profiles.
      allow delete: if false;
    }

    // Rules for sessions (example, adjust as needed)
    match /sessions/{sessionId} {
      // Example: Allow authenticated users to read and write sessions.
      // You'll likely want more specific rules here based on coachId, clientId, roles etc.
      allow read, write: if request.auth.uid != null;
    }

    // Add other collection rules below if needed
    // e.g., match /yourOtherCollection/{documentId} {
    //   allow read, write: if <condition>;
    // }
  }
}
