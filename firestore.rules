rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to securely identify an admin.
    function isAdmin() {
      // This get() call is the source of truth for admin status.
      // It checks the user's own document in the 'users' collection.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Global Admin Rule ---
    // If the user is an admin, they can do anything to any document.
    // This rule is checked first for any path and grants universal access.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // --- User Collection Rules (for non-admins) ---
    // These rules only apply if the user is NOT an admin.
    match /users/{userId} {
      // Allow a non-admin to create their own user document during signup.
      allow create: if request.auth.uid == userId;

      // Allow a non-admin to read and update their own user document.
      allow read, update: if request.auth.uid == userId;
    }
    
    // --- Sessions Collection Rules (for non-admins) ---
    // These rules only apply if the user is NOT an admin.
    match /sessions/{sessionId} {
      // Allow a non-admin (coach or client) to read their own sessions.
      allow read: if request.auth.uid == resource.data.coachId || request.auth.uid == resource.data.clientId;
      
      // Allow a non-admin (specifically a coach) to create or update sessions they are the coach for.
      allow create, update: if request.auth.uid == request.resource.data.coachId;
    }
  }
}
